from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv
import logging
import os

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
menu = InlineKeyboardMarkup(row_width=1)
menu.add(
    InlineKeyboardButton("üìÑ –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç", callback_data="get_checklist"),
    InlineKeyboardButton("üé• –°–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ-—É—Ä–æ–∫", url="https://t.me/irina_s_vetriny/229"),
    InlineKeyboardButton("üì¶ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞", url="https://t.me/irina_s_vetriny/230"),
    InlineKeyboardButton("üí∞ –ö—É–ø–∏—Ç—å –∫—É—Ä—Å —á–µ—Ä–µ–∑ Boosty", url="https://boosty.to/irina_s_vitriny/posts/80389461-2021-43f0-9c20-08668971a32b?share=post_link"),
    InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url="https://t.me/irina_s_vetriny"),
    InlineKeyboardButton("üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", url="https://t.me/irina_s_vetriny")
)

@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    logging.info(f"User {message.from_user.id} started the bot.")
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É—Ä—Å —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å –∂–µ–Ω—â–∏–Ω–∞–º–∏!\n\n–í–æ—Ç —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:",
        reply_markup=menu
    )

@dp.callback_query_handler(lambda c: c.data == "get_checklist")
async def send_checklist(callback_query: types.CallbackQuery):
    logging.info(f"User {callback_query.from_user.id} requested checklist.")
    try:
        with open("checklist.pdf", "rb") as doc:
            await bot.send_document(callback_query.from_user.id, doc)
        await bot.answer_callback_query(callback_query.id)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")
        await bot.send_message(callback_query.from_user.id, "üö´ –û—à–∏–±–∫–∞: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
