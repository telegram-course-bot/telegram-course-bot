from aiogram import Bot, Dispatcher, executor, types
import logging
import os
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv('TOKEN')

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        types.InlineKeyboardButton("üìã –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç", url="https://t.me/irina_s_vetriny/228?comment=1724"),
        types.InlineKeyboardButton("üé• –°–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ-—É—Ä–æ–∫", callback_data="demo"),
        types.InlineKeyboardButton("üì¶ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞", callback_data="program"),
        types.InlineKeyboardButton("üî• –ö—É–ø–∏—Ç—å –∫—É—Ä—Å —á–µ—Ä–µ–∑ Boosty", url="https://boosty.to/irina_s_vitriny/posts/80389461-2021-43f0-9c20-08668971a32b?share=post_link"),
        types.InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url="https://t.me/Grenka_IR")
    )
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É—Ä—Å —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å –∂–µ–Ω—â–∏–Ω–∞–º–∏!\n\n–í–æ—Ç —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:",
        reply_markup=keyboard
    )

@dp.callback_query_handler(lambda c: True)
async def process_callback(callback_query: types.CallbackQuery):
    if callback_query.data == 'demo':
        await bot.answer_callback_query(callback_query.id)
        await bot.send_message(callback_query.from_user.id, "üé• –î–µ–º–æ-—É—Ä–æ–∫ –ø–æ—è–≤–∏—Ç—Å—è —Å–∫–æ—Ä–æ.")
    elif callback_query.data == 'program':
        await bot.answer_callback_query(callback_query.id)
        await bot.send_message(callback_query.from_user.id, "üì¶ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞:\n1. –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å\n2. –û–±—â–µ–Ω–∏–µ\n3. –ü—Ä–∞–∫—Ç–∏–∫–∞")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
