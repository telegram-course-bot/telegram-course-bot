from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    # Inline –∫–Ω–æ–ø–∫–∏
    inline_kb = InlineKeyboardMarkup(row_width=1)
    inline_kb.add(
        InlineKeyboardButton("üìã –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç", url="https://t.me/irina_s_vetriny/228?comment=1724"),
        InlineKeyboardButton("üé• –°–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ-—É—Ä–æ–∫", url="https://t.me/irina_s_vetriny/229"),
        InlineKeyboardButton("üì¶ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞", url="https://t.me/irina_s_vetriny/230"),
        InlineKeyboardButton("üí∞ –ö—É–ø–∏—Ç—å –∫—É—Ä—Å —á–µ—Ä–µ–∑ Boosty", url="https://boosty.to/irina_s_vitriny/posts/80389461-2021-43f0-9c20-08668971a32b?share=post_link"),
        InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url="https://t.me/irina_s_vetriny"),
        InlineKeyboardButton("üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", url="https://t.me/irina_s_vetriny")
    )

    # Reply –∫–Ω–æ–ø–∫–∏
    reply_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    reply_kb.add(
        KeyboardButton("üìã –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç"),
        KeyboardButton("üí∞ –ö—É–ø–∏—Ç—å —á–µ—Ä–µ–∑ Boosty")
    )

    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–∫—É—Ä—Å —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å –∂–µ–Ω—â–∏–Ω–∞–º–∏*!\n\n"
        "–í–æ—Ç —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:",
        parse_mode="Markdown",
        reply_markup=inline_kb
    )
    await message.answer("üëá –ò–ª–∏ –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:", reply_markup=reply_kb)

# –ö–æ–º–∞–Ω–¥–∞ /feedback
@dp.message_handler(commands=["feedback"])
async def feedback_handler(message: types.Message):
    text = message.get_args()
    if not text:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –æ—Ç–∑—ã–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n/feedback –°–ø–∞—Å–∏–±–æ –∑–∞ –∫—É—Ä—Å!")
        return

    admin_id = 394515067  # –¢–≤–æ–π Telegram ID

    feedback_text = (
        f"üí¨ *–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç* [{message.from_user.full_name}](tg://user?id={message.from_user.id}):\n\n"
        f"{text}"
    )

    try:
        await bot.send_message(admin_id, feedback_text, parse_mode="Markdown")
        await message.reply("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! üôå")
    except Exception as e:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(e)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
